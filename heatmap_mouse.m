%% The following lines need a p-Value table generated by callDatabase.m
%% Setup
dbfile = 'GeneExpressions.db';
s='''';

%% FLAGS FOR MICRORNAs
% Set one flag for choice of miRNAs true, everything else false
specialTargets = false;
regCluster1 = true;
regCluster2 = false;
regCluster3 = false;
regCluster4 = false;
regCluster5 = false;
HFD_chow_overall = false;

%% FLAGS FOR TARGET GENE SOURCE
% Set one flag for LRGS: Either DZD or VSG cohort
VSG_cohort = false;
DZD_cohort = true;
protein = false;

%% Select miRNA with association of interest

if(HFD_chow_overall)
    % Should be expressed, mature miRNA and fulfill comparison criteria
    select = table_pvalues.isexpressed == 1 & ... 
        ~contains(string(table_pvalues.TranscriptID),'r') & ...
        table_pvalues.pHFD_chow < 0.05;
    mRNAs = {'Appl2','Arhgap24','Cd82','Coasy','Cobll1','Ddx3x',...
    'Gstm2','Gk','Hist1h3h','Hsd17b12','Inhbe','Khk','Myc',...
    'Smim13','Tap1'};
mRNAs = {'Cobll1','Gk','Inhbe','Khk','Gstm2'};
elseif(regCluster1)
    % Regulationscluster 1:		HFD vs Chow ist UP; CR und Ex4 dwn		
    mRNAs = {'Appl2','Arhgap24','Coasy','Hsd17b12','Gk','Inhbe','Tap1','Gstm2','Khk','Hist1h3h'};
    mRNAs = {'Coasy','Hsd17b12','Gk','Inhbe','Tap1'};
    select = table_pvalues.isexpressed == 1 & ... 
        ~contains(string(table_pvalues.TranscriptID),'r') & ...
        (table_pvalues.pHFD_chow < 0.05 & table_pvalues.eHFD_chow < 1) & ...
        (...
            (table_pvalues.pEx_HFD < 0.05 & table_pvalues.eEx_HFD > 1) | ...
            (table_pvalues.pCR_HFD < 0.05 & table_pvalues.eCR_HFD > 1)...
        );   
elseif(regCluster2)
    % Regulationscluster 2:		HFD vs Chow ist UP; VSG ist dwn		
    mRNAs = {'Coasy','Hsd17b12','Gk','Inhbe','Gstm2','Khk'};
    select = table_pvalues.isexpressed == 1 & ... 
        ~contains(string(table_pvalues.TranscriptID),'r') & ...
        (table_pvalues.pHFD_chow < 0.05 & table_pvalues.eHFD_chow < 1) & ...
        (...
            (table_pvalues.pVSG_d9 < 0.05 & table_pvalues.eVSG_d9 > 1) | ...
            (table_pvalues.pVSG_d35 < 0.05 & table_pvalues.eVSG_d35 > 1)...
        );
elseif(regCluster3)
    % Regulationscluster 3:		HFD vs Chow ist UP; VSG ist UP		
    mRNAs = {'Appl2','Arhgap24','Cd82','Tap1','Hist1h3h'};
    select = table_pvalues.isexpressed == 1 & ... 
        ~contains(string(table_pvalues.TranscriptID),'r') & ...
        (table_pvalues.pHFD_chow < 0.05 & table_pvalues.eHFD_chow < 1) & ...
        (...
            (table_pvalues.pVSG_d9 < 0.05 & table_pvalues.eVSG_d9 < 1) | ...
            (table_pvalues.pVSG_d35 < 0.05 & table_pvalues.eVSG_d35 < 1)...
        );
elseif(regCluster4)
    % Regulationscluster 4:		HFD vs Chow ist UP; HC ist dwn		
    mRNAs = {'Coasy','Hsd17b12','Gk','Inhbe','Tap1','Gstm2','Khk','Hist1h3h'};
    select = table_pvalues.isexpressed == 1 & ... 
        ~contains(string(table_pvalues.TranscriptID),'r') & ...
        (table_pvalues.pHFD_chow < 0.05 & table_pvalues.eHFD_chow < 1) & ...
        (table_pvalues.pHC_HFD < 0.05 & table_pvalues.eHC_HFD > 1);   
elseif(regCluster5)
    % Regulationscluster 5:		HFD vs Chow ist DWN; HC, VSG und Ex sind UP			
    mRNAs = {'Myc','Smim13','Cobll1','Ddx3x','Appl2','Arhgap24','Cd82'};
    mRNAs = {'Smim13','Cobll1','Ddx3x','Appl2','Arhgap24','Cd82'};
    select = table_pvalues.isexpressed == 1 & ... 
        ~contains(string(table_pvalues.TranscriptID),'r') & ...
        (table_pvalues.pHFD_chow < 0.05 & table_pvalues.eHFD_chow > 1) & ...
        (...
                (table_pvalues.pVSG_d9 < 0.05 & table_pvalues.eVSG_d9 < 1) ...
             | ...
                (table_pvalues.pVSG_d35 < 0.05 & table_pvalues.eVSG_d35 < 1)...
             |...
                (table_pvalues.pEx_HFD < 0.05 & table_pvalues.eEx_HFD < 1)...
             | ...
                (table_pvalues.pHC_HFD < 0.05 & table_pvalues.eHC_HFD < 1)...
         );
elseif(specialTargets)
    % Also search for names and special miRNAs
    select = strcmp(string(table_pvalues.TranscriptID),'mmu-miR-21a-5p') | ...
        strcmp(string(table_pvalues.TranscriptID),'mmu-miR-16-5p') | ...
        strcmp(string(table_pvalues.TranscriptID),'mmu-miR-505-5p') | ...
        strcmp(string(table_pvalues.TranscriptID),'mmu-miR-149-5p');
end

disp(sum(select) + " miRNAs to process")
toi = table_pvalues(select,:);

% Setup tables: Hard coded amount of animals (24 VGS, 30 DZD)
values_DZD = zeros(size(toi,1),30);
values_VSG = zeros(size(toi,1),24);
IDs = cell(size(toi,1),1);
ID_DZD = zeros(1,30);
ID_VSG = zeros(1,24);

% Fill tables by miRNA transcript ID
for k=1:size(toi,1)
    connection = sqlite(dbfile);
    tmp = toi.TranscriptID(k);
    term = strcat(s,tmp{1},s);
    term2 = strcat(s,'sample',s);
    
    query = ['select * from DZD_miR4_values where DZD_miR4_values.TranscriptID like ', ...
        term, ' or DZD_miR4_values.TranscriptID = ',...
        term2];
    result = fetch(connection,query);
    close(connection);
    values_DZD(k,:) = cell2mat(result(2,3:end));
    IDs(k,1) = result(2,2);
    ID_DZD = cell2mat(result(1,3:end));
    
    connection = sqlite(dbfile);
    query = ['select * from VSG_miR4_values where VSG_miR4_values.TranscriptID like ', ...
        term, ' or VSG_miR4_values.TranscriptID = ',...
        term2];
    result = fetch(connection,query);
    close(connection);
    values_VSG(k,:) = cell2mat(result(2,3:end));
    ID_VSG = cell2mat(result(1,3:end));
end

%% Merge miRNA values with phenotypes of interest
tmp = [ID_VSG; values_VSG];
values_twist_VSG = array2table(tmp.');
values_twist_VSG.Properties.VariableNames{1} = 'VSG';

tmp = [ID_DZD; values_DZD];
values_twist_DZD = array2table(tmp.');
values_twist_DZD.Properties.VariableNames{1} = 'DZD';

for i=2:size(values_twist_DZD,2)
    values_twist_DZD.Properties.VariableNames{i} = char(IDs{i-1});
    values_twist_VSG.Properties.VariableNames{i} = char(IDs{i-1});
end

%In-Place raw miRNA data
tmp_val1 = removevars(values_twist_DZD, 'DZD');
tmp_val2 = removevars(values_twist_VSG, 'VSG');
traitTable2 = [tmp_val1; tmp_val2];

% Grouping DZD hard coded
ID_DZD(2,1:6) = 1; % Chow
ID_DZD(2,7:12) = 2; % HFD
ID_DZD(2,13:18) = 3; % HC
ID_DZD(2,19:24) = 4; % CR
ID_DZD(2,25:30) = 5; % Ex

% Grouping VSG
connection = sqlite(dbfile);
term3 = strcat(s,'Group2',s);
query = ['select * from VSG_miR4_values where VSG_miR4_values.TranscriptID = ', term3];
result = fetch(connection,query);
close(connection);
ID_VSG(2,:) = cell2mat(result(:,3:end));



query2 = ['select Epi_Nr, T2DnachUKE from UKE_Cohort_Parameters'];
    connection = sqlite(dbfile);
    result = fetch(connection,query2);
    close(connection);
    parameters = {'EpiNr', 'T2DnachUKE'};

    col2 = array2table(zeros(size(result)));
    for i=1
        col2(:,i) = array2table(cell2mat(result(:,i)));
        col2.Properties.VariableNames{i} = parameters{i};
    end
    for i=2:size(result,2)
        col2(:,i) = array2table(str2double(result(:,i)));
        col2.Properties.VariableNames{i} = parameters{i};
    end

%% Heatmap for each group
clustergChow = clustergram(table2array(values_twist_DZD((ID_DZD(2,:) == 1).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_DZD(1,(ID_DZD(2,:) == 1)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderDZD = str2num(cell2mat(clustergChow.RowLabels));

clustergHFD = clustergram(table2array(values_twist_DZD((ID_DZD(2,:) == 2).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_DZD(1,(ID_DZD(2,:) == 2)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderDZD = [orderDZD; str2num(cell2mat(clustergHFD.RowLabels))];

clustergHC = clustergram(table2array(values_twist_DZD((ID_DZD(2,:) == 3).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_DZD(1,(ID_DZD(2,:) == 3)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderDZD = [orderDZD; str2num(cell2mat(clustergHC.RowLabels))];

clustergCR = clustergram(table2array(values_twist_DZD((ID_DZD(2,:) == 4).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_DZD(1,(ID_DZD(2,:) == 4)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderDZD = [orderDZD; str2num(cell2mat(clustergCR.RowLabels))];

clustergEX = clustergram(table2array(values_twist_DZD((ID_DZD(2,:) == 5).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_DZD(1,(ID_DZD(2,:) == 5)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderDZD = [orderDZD; str2num(cell2mat(clustergEX.RowLabels))];

clustergSham9 = clustergram(table2array(values_twist_VSG((ID_VSG(2,:) == 1).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_VSG(1,(ID_VSG(2,:) == 1)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderVSG = str2num(cell2mat(clustergSham9.RowLabels));

clustergVSG9 = clustergram(table2array(values_twist_VSG((ID_VSG(2,:) == 2).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_VSG(1,(ID_VSG(2,:) == 2)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderVSG = [orderVSG; str2num(cell2mat(clustergVSG9.RowLabels))];

clustergSham35 = clustergram(table2array(values_twist_VSG((ID_VSG(2,:) == 3).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_VSG(1,(ID_VSG(2,:) == 3)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderVSG = [orderVSG; str2num(cell2mat(clustergSham35.RowLabels))];

clustergVSG35 = clustergram(table2array(values_twist_VSG((ID_VSG(2,:) == 4).', 2:end)),'Colormap',redbluecmap,...
'Standardize','Column', 'RowLabels',ID_VSG(1,(ID_VSG(2,:) == 4)),'ColumnLabels',IDs, ...
'Linkage','complete','Dendrogram',3);
orderVSG = [orderVSG; str2num(cell2mat(clustergVSG35.RowLabels))];


%% Merge tables and draw Heatmap

% Merge Tables
traitTable = [values_twist_DZD(orderDZD,2:end); values_twist_VSG(orderVSG,2:end)];
names = {'chow'; 'chow'; 'chow'; 'chow'; 'chow'; 'chow'; ...
    'HFD'; 'HFD';'HFD'; 'HFD';'HFD'; 'HFD'; ...
    'H>C';'H>C';'H>C';'H>C';'H>C';'H>C';...
    'CR';'CR';'CR';'CR';'CR';'CR';...
    'Ex4';'Ex4';'Ex4';'Ex4';'Ex4';'Ex4';...
    'Sham d9';'Sham d9';'Sham d9';'Sham d9';'Sham d9';'Sham d9';...
    'VSG d9';'VSG d9';'VSG d9';'VSG d9';'VSG d9';'VSG d9'; ...
    'Sham d35';'Sham d35';'Sham d35';'Sham d35';'Sham d35';'Sham d35'; ...
    'VSG d35';'VSG d35';'VSG d35';'VSG d35';'VSG d35';'VSG d35'};

% Colormap redbluecmap, redgreencmap, colormap('bone')
clusterg = clustergram(table2array(traitTable),'Colormap',colormap('spring'),...
    'Standardize','Column', 'RowLabels',names,'ColumnLabels',IDs, ...
    'Linkage','complete','Dendrogram',3,'Cluster','row');
cgfig = findall(0,'type','figure', 'tag', 'Clustergram'); % Figure handle
cgax = findobj(cgfig, 'type','axes','tag','HeatMapAxes'); % main axis handle

traitTable(:,end+1) = array2table(names);
traitTable2(:,end+1) = array2table(names);



traitTable(:,end+1) = array2table(names);
traitTable2(:,end+1) = array2table(names);

clear t2 nd orderT2D dbfile s specialTargets toi tmp take values EpiNr cgfig cgax ans coeff
clear clusterg clusterND clusterT2D col2 i k orderND parameters query query2 result
clear selectFCup selectFCupdw term term2 tempTable1 tempTable2 valuesTwist
clear clusterChow clustergCR clustergEX clustergHC clustergHFD orderDZD orderVSG
clear term3 values_DZD values_VSG names ID_DZD ID_VSG

drawGraph_mouse;
 

    